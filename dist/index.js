import{execa as m}from"execa";import u from"fs/promises";import c from"path";var e=new Map,l=n=>u.stat(n).then(()=>!0,()=>!1);function r(n){let t=`has_global_${n}`;return e.has(t)?Promise.resolve(e.get(t)):m(n,["--version"]).then(o=>/^\d+.\d+.\d+$/.test(o.stdout)).then(o=>(e.set(t,o),o)).catch(()=>!1)}async function h(n){let t=["yarn","npm","bun"];return(await Promise.all(t.map(async a=>{let s=a==="npm"?"package-lock.json":`${a}.lock${a==="bun"?"b":""}`,i=await l(c.join(n,s)),p=await r(a);return{name:a,hasLock:i,hasGlobal:p}}))).filter(a=>a.hasLock||a.hasGlobal)}async function f(n=process.cwd()){return await l(c.join(n,"pnpm-lock.yaml"))?{canPnpm:!0,reason:"local lock file"}:await r("pnpm")?{canPnpm:!0,reason:"global installation"}:{canPnpm:!1,otherManagers:(await h(n)).map(s=>({name:s.name,detected:s.hasLock?"local lock file":"global installation"}))}}var g=f;export{g as default};
//# sourceMappingURL=index.js.map